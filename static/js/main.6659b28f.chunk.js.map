{"version":3,"sources":["firebase.js","actions.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","getCollection","collection","a","result","statusResponse","data","error","get","arrayData","docs","map","doc","id","console","log","addDocument","add","response","updateDocument","update","App","useState","nom","setNombre","cor","setCorreo","tel","setTelefono","desc","setDescricpion","tasks","setTasks","editMode","setEditMode","setId","setError","useEffect","addTask","e","preventDefault","isEmpty","nombre","correo","telefono","descripcion","saveTask","editedTasks","item","className","onSubmit","type","placeholder","onChange","text","target","value","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6659b28f.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAtrWElhYWIscOAK9Ww8LIc2HmW79ncFV0\",\r\n  authDomain: \"lionssupport-471fa.firebaseapp.com\",\r\n  projectId: \"lionssupport-471fa\",\r\n  storageBucket: \"lionssupport-471fa.appspot.com\",\r\n  messagingSenderId: \"988757581275\",\r\n  appId: \"1:988757581275:web:f5bb98f4d2ee74e3c41bfe\"\r\n};\r\n\r\n\r\n\r\nexport const firebaseApp=firebase.initializeApp(firebaseConfig)","import {firebaseApp} from './firebase'\r\n\r\nimport 'firebase/firestore'\r\n\r\n\r\nconst db=firebaseApp.firestore(firebaseApp)\r\n\r\nexport const getCollection= async(collection) => {\r\n    const result ={statusResponse:false, data:null, error:null}\r\ntry{\r\n    const data=await db.collection(collection).get()\r\n    const arrayData= data.docs.map(doc=>({ id:doc.id, ...doc.data()}))\r\n    console.log(arrayData)\r\n    result.statusResponse=true\r\n    result.data=arrayData\r\n\r\n} catch(error){\r\n    result.error=error\r\n}\r\nreturn result\r\n}\r\n\r\nexport const addDocument= async (collection, data)=> {\r\n    const result={statusResponse:false, data:null, error:null}\r\ntry{\r\n    const response=await db.collection(collection).add(data)\r\n    result.data={id:response.id}\r\n    result.statusResponse=true\r\n\r\n}catch(error){\r\n    result.error=error\r\n}\r\nreturn result\r\n}\r\n\r\nexport const getDocument=async(collection, id)=>{\r\n    const result={statusResponse:false, data:null, error:null}\r\n\r\ntry{\r\n    const response=await db.collection(collection).doc(id).get()\r\n    result.data={id:response.id, ...response.data()}\r\n    result.statusResponse=true\r\n\r\n}catch(error){\r\nresult.error=error\r\n}\r\nreturn result\r\n\r\n}\r\n\r\nexport const updateDocument=async(collection, id, data)=>{\r\n    const result={statusResponse:false, error:null}\r\n\r\ntry{\r\n    //eslint-disable-next-line\r\n    const response=await db.collection(collection).doc(id).update(data)\r\n    result.statusResponse=true\r\n\r\n}catch(error){\r\n    result.error=error\r\n}\r\nreturn result\r\n\r\n}\r\n\r\nexport const deleteDocument=async(collection, id)=>{\r\n    const result={statusResponse:false, error:null}\r\n\r\ntry{\r\n    await db.collection(collection).doc(id).delete()\r\n    result.statusResponse=true\r\n\r\n}catch(error){\r\n    result.error=error\r\n}\r\nreturn result\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//eslint-disable-next-line\nimport { isEmpty, size } from 'lodash';\n//eslint-disable-next-line\nimport { addDocument, deleteDocument, getCollection, updateDocument } from './actions'\n\n\n\n\nfunction App() {\n    const [nom, setNombre] = useState(\"\")\n    const [cor, setCorreo] = useState(\"\")\n    const [tel, setTelefono] = useState(\"\")\n    const [desc, setDescricpion] = useState(\"\")\n    const [tasks, setTasks] = useState([])\n    const [editMode, setEditMode] = useState(false)\n    const [id, setId] = useState(\"\")\n    //eslint-disable-next-line\n    const [error, setError] = useState(null)\n\n\n    useEffect(() => {\n        (async () => {\n            const result = await getCollection(\"clientes\")\n            console.log(result)\n            if (result.statusResponse) {\n                setTasks(result.data)\n            }\n        })()\n    }, [])\n\n\n    const addTask = async (e) => {\n        e.preventDefault()\n        if (isEmpty(nom)) {\n            console.log(\"Cliente vacío\")\n            return\n        }\n\n        if (isEmpty(cor)) {\n            console.log(\"Cliente vacío\")\n            return\n        }\n\n        if (isEmpty(tel)) {\n            console.log(\"Cliente vacío\")\n            return\n        }\n\n        if (isEmpty(desc)) {\n            console.log(\"Cliente vacío\")\n            return\n        }\n\n\n        const result = await addDocument(\"clientes\", { nombre: nom, correo: cor, telefono: tel, descripcion: desc })\n        if (!result.statusResponse) {\n            setError(result.error)\n            return\n        }\n\n\n        /*  const newTask={\n            id:shortid.generate(),\n            name:task\n            }*/\n\n        setTasks([...tasks, { id: result.data.id, nombre: nom, correo: cor, telefono: tel, descripcion: desc }])\n        setNombre(\"\")\n        setCorreo(\"\")\n        setTelefono(\"\")\n        setDescricpion(\"\")\n    }\n\n    const saveTask = async (e) => {\n        e.preventDefault()\n        if (isEmpty(nom)) {\n            console.log(\"Cliente vacío\")\n            return\n        }\n\n        if (isEmpty(cor)) {\n            console.log(\"Cliente vacío\")\n            return\n        }\n\n        if (isEmpty(tel)) {\n            console.log(\"Cliente vacío\")\n            return\n        }\n\n        if (isEmpty(desc)) {\n            console.log(\"Cliente vacío\")\n            return\n        }\n\n        const result = await updateDocument(\"clientes\", id, { nombre: nom, correo: cor, telefono: tel, descripcion: desc })\n        if (!result.statusResponse) {\n            setError(result.error)\n            return\n        }\n\n        const editedTasks = tasks.map(item => item.id === id ? { id, nombre: nom, correo: cor, telefono: tel, descripcion: desc } : item)\n        setTasks(editedTasks)\n        setEditMode(false)\n        setNombre(\"\")\n        setCorreo(\"\")\n        setTelefono(\"\")\n        setDescricpion(\"\")\n        setId(\"\")\n    }\n//eslint-disable-next-line\n    const deleteTask = async (id) => {\n        const result = await deleteDocument(\"clientes\", id)\n        if (!result.statusResponse) {\n            setError(result.error)\n            return\n        }\n        const filteredTasks = tasks.filter(task => task.id !== id)\n        setTasks(filteredTasks)\n    }\n\n// eslint-disable-next-line\n    const editTask = (tarea) => {\n        setNombre(tarea.nombre)\n        setCorreo(tarea.correo)\n        setTelefono(tarea.telefono)\n        setDescricpion(tarea.descripcion)\n        setEditMode(true)\n        setId(tarea.id)\n    }\n\n    return (\n        <>\n                <div className=\"container mt-4\">\n                    <div className=\"row align-items-start \">\n                        <div className=\"col-6  container-fluid\">\n                            <h4 className=\"text-center navbar navbar-warning bg-warning text-light\">{editMode ? \"Modificar problema\" : \"Inserta la Problemática\"}</h4>\n                            <form onSubmit={editMode ? saveTask : addTask}>\n                                <label>Nombre</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control mb-2\"\n                                    placeholder=\"Agrega un Nombre...\"\n                                    onChange={(text) => setNombre(text.target.value)}\n                                    value={nom.name}\n                                />\n\n                                <label>Correo</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control mb-2\"\n                                    placeholder=\"Agregar el Correo...\"\n                                    onChange={(text) => setCorreo(text.target.value)}\n                                    value={cor.correo}\n                                />\n\n                                <label>Teléfono</label>\n                                <input\n                                    type=\"num\"\n                                    className=\"form-control mb-2\"\n                                    placeholder=\"Agrega un Teléfono...\"\n                                    onChange={(text) => setTelefono(text.target.value)}\n                                    value={tel.telefono}\n                                />\n\n                                <label>Descripción</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control mb-2\"\n                                    placeholder=\"Agrega la Descripción...\"\n                                    onChange={(text) => setDescricpion(text.target.value)}\n                                    value={desc.descripcion}\n                                />\n\n\n                                <button className={editMode ? \"btn btn-warning btn-block\" : \"btn btn-warning btn-block\"}\n                                    type=\"submit\"\n                                > {editMode ? \"Guardar\" : \"Guardar\"}</button>\n                                \n                            </form>\n                        </div>\n                    </div>\n                </div>\n                 \n        </>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}